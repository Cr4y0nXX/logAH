[global]
# ——————————————全局参数配置——————————————

# 加载服务器日志的间隔时间，表示隔多久分析处理一次服务器日志。单位：秒
loadLogIntervalTime = 3

[filePath]
# 所有程序运行中可能用到的文件及路径

# 被分析的服务器日志文件，默认apache2服务器
# webLogFile = /var/log/apache2/access.log
webLogFile = c:/Users/13714/Desktop/access.log

# 程序日志文件路径，保存所有被ban过的IP信息
logPath = ./log/

# 在封禁中的IP记录及查询日志，仅存储已封禁IP，会定时将解封IP从中删除
# 系统是否将服务器日志分析得到的恶意IP ban掉取决于该文件中是否存在此IP
filterIPFile = ./db/filter_ip.txt

[accessTimes]
# ————————————————访问次数及频率过滤模块————————————————

#模块的状态
status = True
# 访问次数的阀值，大于该数目才会被纳入下一步访问时间比的计算，减少不必要的处理
countIP = 5
# 相邻两次访问的时间间隔，小于等于该值会被判定为一次恶意请求。单位：秒
accessInterval = 1
# 恶意请求比例，为恶意请求占所有请求的比例，大于该比值则判定此IP为恶意IP，进行封禁，默认1/2
ratio = 0.5

[badRequest]
# ——————————————————失败请求过滤模块——————————————————
status = True
countIP = 5
ratio = 0.5

# 恶意请求响应码Code，请求的响应码为以下值之一时，暂时判定为一次恶意请求。
# （空格隔开）
codeList = 404  403

[maliciousData]
# ————————————————恶意数据特征串过滤模块————————————————
status = True
countIP = 5
# ratio = 0.5

# 恶意数据集，当请求url中出现以下数据时，判定为一次恶意请求
# （双引号括起来，逗号隔开，不加空格）
sign = "\\","*","&&","..","#","//"
word = "shell","nc","bash"
strs = "<script>","<img>","and 1=1","and '1' = '1","<php>"

[performance]
# 性能配置，用于为程序分配各项资源
# 为了操作系统能够正常运行，以及程序能够正常运行，建议分配内存大小不要超过系统内存大小的1/16